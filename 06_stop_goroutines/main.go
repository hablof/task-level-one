package main

import (
	"context"
	"fmt"
	"sync"
	"time"
)

func main() {
	defer fmt.Println("üïì –ó–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –≤—Å–µ –≥–æ—Ä—É—Ç–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∂–¥–∞–ª–∏")

	wg := &sync.WaitGroup{}
	termSig := make(chan struct{})
	closingChn := make(chan struct{})
	ctx, cf := context.WithCancel(context.Background())

	wg.Add(1)
	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å–∞–º–∞
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –Ø –∑–∞–≤–µ—Ä—à–∞—é—Å—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ...")
	}()

	wg.Add(1)
	// –≠—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –æ—Ç–ª–æ–≤–∏–≤ –ø–∞–Ω–∏–∫—É
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –Ø –ø–µ—Ä–µ–∂–∏–ª–∞ –ø–∞–Ω–∏–∫—É")
		defer func() {
			msg := recover()
			fmt.Printf("üò± panic message was: %v\n", msg)
		}()
		panic("spicial panic")
	}()

	wg.Add(1)
	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞. –ó–∞–≤–µ—Ä—à–∞—é—Å—å...")

		// –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è for {select{}} –∑–¥–µ—Å—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
		for {
			select {
			case <-termSig:
				return

			default:
				time.Sleep(500 * time.Millisecond)
			}
		}
	}()

	wg.Add(1)
	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –∑–∞–∫—Ä—ã—Ç–∏—é –∫–∞–Ω–∞–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ for range
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã–ª—Å—è. –ó–∞–≤–µ—Ä—à–∞—é—Å—å... (for range)")

		for range closingChn {

		}
	}()

	wg.Add(1)
	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –∑–∞–∫—Ä—ã—Ç–∏—é –∫–∞–Ω–∞–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ "val, ok := <- ch"
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã–ª—Å—è. –ó–∞–≤–µ—Ä—à–∞—é—Å—å... (val, ok := <- ch)")

		for {
			if _, ok := <-closingChn; !ok {
				return
			}
		}
	}()

	wg.Add(1)
	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –æ—Ç–º–µ–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (—Ö–æ—Ç—è, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ -- —ç—Ç–æ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–Ω–∞–ª–∞)
	go func() {
		defer wg.Done()
		defer fmt.Println("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ç–º–µ–Ω—ë–Ω. –ó–∞–≤–µ—Ä—à–∞—é—Å—å...")

		// –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è for {select{}} –∑–¥–µ—Å—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
		for {
			select {
			case <-ctx.Done():
				return

			default:
				time.Sleep(500 * time.Millisecond)
			}
		}
	}()

	// —ç—Ç–∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –≤–ª–µ–¥ –∑–∞ –≥–æ—Ä—É—Ç–∏–Ω–æ–π main
	// —á—Ç–æ–±—ã —ç—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –Ω–µ –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å wg Add(1)
	// –í—ã—Ä–∞–∂–µ–Ω–∏—è –≤ defer —ç—Ç–æ–π –≥–æ—Ä—É—Ç–∏–Ω—ã –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è
	go func() {
		defer fmt.Println("‚ùå –≠—Ç—É –Ω–∞–¥–ø–∏—Å—å –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ")
		for {
			time.Sleep(100 * time.Millisecond)
			fmt.Println("üêõ –ì–æ—Ä—É—Ç–∏–Ω–∞ –≤—Å—ë –µ—â—ë –∂–∏–≤–∞")
		}
	}()

	time.Sleep(500 * time.Millisecond)

	// –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–≤–µ—Ä—à–∞—Ç—å –≥–æ—Ä—É—Ç–∏–Ω—ã...
	close(closingChn)
	termSig <- struct{}{}
	cf()

	wg.Wait()
}
